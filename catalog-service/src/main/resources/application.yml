---
server:
  port: 9001
  shutdown: graceful
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

spring:
  application:
    name: catalog-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 # 5s
      request-read-timeout: 5000 # 5s
      fail-fast: false # build fails when config server is offline In production, set to true
      retry:
        max-attempts: 6
        initial-interval: 1000 # 1s
        max-interval: 2000 # 2s
        multiplier: 1.1
  ##  DB init script at catalog-service/src/main/resources/schema.sql is made obsolete by Flyway DB
#  sql:
#    init:
#      mode: always
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000
      maximum-pool-size: 5
## We added extra flyway instructions
## as a realistic production-like scenario where the schema already holds valuable data in various tables
## and therefore, tables cannot be dropped and recreated on a whim
## (of course this should also be a consideration defining the sql scripts themselves)
  flyway:
    baseline-description: 'Flyway Baseline with book table already present'
    baseline-on-migrate: true # we want to baseline a non-empty schema,

# actuator config to trigger refresh after a config-service update was reported with:
# $ http POST :9001/actuator/refresh
management:
  endpoints:
    web:
      exposure:
        include: refresh

# Defaults in case the config server cannot be reached
polar:
  greeting: Bumblebee
